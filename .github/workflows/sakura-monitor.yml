name: Sakura Internet Status Monitor

on:
  schedule:
    # 毎時0分に実行（1時間間隔）
    - cron: '0 * * * *'
  # 手動実行も可能にする
  workflow_dispatch:

jobs:
  monitor:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install requests beautifulsoup4
        
    - name: Check notification history file
      run: |
        if [ -f notification_sent.json ]; then
          echo "Previous notification history found:"
          cat notification_sent.json
        else
          echo "No previous notification history found, starting fresh"
          echo '{}' > notification_sent.json
        fi
        
    - name: Run Sakura Monitor
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        AUTO_MODE: '1'
      run: |
        python sakura_checker.py auto
        
    - name: Commit notification history
      run: |
        if [ -f notification_sent.json ] && [ -s notification_sent.json ]; then
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add notification_sent.json
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update notification history [skip ci]"
            git push
            echo "Notification history updated"
          fi
        else
          echo "No notification history to commit"
        fi

    # - name: Test Slack notification
    #   env:
    #     SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    #   run: |
    #     echo "Forcing Slack test notification..."
    #     python -c "import os, requests; webhook_url=os.environ.get('SLACK_WEBHOOK_URL'); resp=requests.post(webhook_url, json={'text': '✅ GitHub ActionsからのSlack送信テスト成功！'}); print('Status:', resp.status_code, resp.text)"


