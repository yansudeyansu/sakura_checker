name: Sakura Internet Status Monitor

on:
  schedule:
    # 毎時0分に実行（1時間間隔）
    - cron: '0 * * * *'
  # 手動実行も可能にする
  workflow_dispatch:

jobs:
  monitor:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install requests beautifulsoup4
        
    - name: Run Sakura Monitor
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        AUTO_MODE: '1'
      run: |
        python sakura_checker.py auto

    # ✅ 強制テスト送信用のステップ（確認が済んだら削除してOK）
    - name: Test Slack notification
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      run: |
        echo "Forcing Slack test notification..."
        python - <<'EOF'
import os, requests
webhook_url = os.environ.get("SLACK_WEBHOOK_URL")
resp = requests.post(webhook_url, json={"text": "✅ GitHub ActionsからのSlack送信テスト成功！"})
print("Status:", resp.status_code, resp.text)
EOF
        
    - name: Upload maintenance history
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: maintenance-history-${{ github.run_number }}
        path: maintenance_sent.json
        retention-days: 30
